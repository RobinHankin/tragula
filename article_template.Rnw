% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
\documentclass[article]{tragula}
\usepackage{dsfont}
\usepackage{bbm}
\usepackage{amsfonts}
\usepackage{wasysym}
\usepackage{xypic}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% just as usual
\author{Joe Bloggs\and Jane Doe\\University of Utopia}
\title{Title goes here}
%\VignetteIndexEntry{The foo package}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Joe Bloggs}
\Plaintitle{Plain title goes here, you cannot use markup}
\Shorttitle{Short title here, can use markup for example \proglang{R}}

%% an abstract and keywords

\Abstract{Abstract goes here, not more than a couple of paragraphs.
  You can follow ISO 214:1976 if you wish, no obligation.  It's
  probably best not to include citations here.

}
    
\Keywords{key word one, key word two, squares \proglang{R}}
\Plainkeywords{key word one, key word two, squares, R}

%% publication information
%% NOTE: This needs to filled out ONLY IF THE PAPER WAS ACCEPTED.
%% If it was not (yet) accepted, leave them commented.
 \Volume{13}
 \Issue{9}
 \Month{September}
 \Year{2004}
 \Submitdate{2004-09-29}
 \Acceptdate{2004-09-29}
%% \Repository{https://github.com/RobinHankin/schwarzschild}

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Joe Bloggs\\
  University of Utopia\\
  62 West Wallaby Street\\
  E-mail: \email{purple.magenta@gmail.com}\\
  URL: \url{http://optional.webaddress.com}
}


%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/1/31336-5053
%% Fax: +43/1/31336-734

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newsymbol\leqslant 1336

\begin{document}

\section{Introduction}

Good submissions to Tragula showcase novel software that demonstrates
or otherwise enhances mathematical knowledge; ``mathematics'' is
interpreted in the broadest sense.  The emphasis is on quality
open-source software, written in \proglang{R}.  Submissions are
expected to include a software component (typically in the form of an
\proglang{R} package), and this will be reviewed alongside the
manuscript and considered jointly.  Packages are expected to pass
\code{R CMD check} cleanly.

Tragula is {\em not} limited to statistics or data science.  The
\proglang{R} programming language is a general-purpose language and
can be used for topology, recreational mathematics, combinatorics,
finite geometry, mechanics, etc; submissions may reflect any branch or
discipline of mathematics.  There is no requirement for a submission
to be ``useful''; criteria such as beauty, elegance, computational
slickness, curiosity, pedagogical value, etc, are more important here.

Submitted software and indeed the
manuscript must be available under an open-source license such as
\proglang{GPL} or \proglang{BSD}, and preferably maintained under
version control such as \proglang{git}.  Reproducibility is required,
and using \proglang{Sweave} on \code{Rnw} files facilitates this.

Manuscripts are expected to be carefully prepared, and clearly linked
with the associated software.  Submissions will be fully peer-reviewed
and as such are expected to contain a literature review in which the
submission is compared with similar existing work and the benefits of
the current approach (one benefit might be that the submission is
open-source and other functionality is proprietary).

There are few typesetting restrictions other than an exhortation to be
consistent throughout the document; and to use provided macros
($\Prob$, $\COV$, etc) where possible.  Packages should be indicated
using the \verb+\pkg+ macro.  Citation management must be via BibTeX,
as in~\citet{lowry1951}; subsequent citations of many-author articles
should be abbreviated as in~\citet{lowry1951}.  \proglang{CRAN}
packages may be cited as in ``the \pkg{mvp} package~\citep{mvp2018}''.

Authors are expected to provide a range of slick \proglang{R} idiom
that showcases their software with propitious examples, as in:

<<squares_one_to_ten>>=
(1:10)^2   # short inline comments are fine
@

Note that readers can actually execute these commands in an
\proglang{R} session with minimal preparation (perhaps after loading a
package).  A good Tragula submission bears many similarities to an
\proglang{R} package vignette.  Hadley Wickham, writing at
\url{http://r-pkgs.had.co.nz/vignettes.html}, phrases it well:

\begin{quote} A vignette is a long-form guide to your
package. Function documentation is great if you know the name of the
function you need, but it is useless otherwise. A vignette is like a
book chapter or an academic paper: it can describe the problem that
your package is designed to solve, and then show the reader how to
solve it. A vignette should divide functions into useful categories,
and demonstrate how to coordinate multiple functions to solve
problems. Vignettes are also useful if you want to explain the details
of your package. For example, if you have implemented a complex
statistical algorithm, you might want to describe all the details in a
vignette so that users of your package can understand what is going on
under the hood, and be confident that you have implemented the
algorithm correctly.  \end{quote}

(although note carefully that it is not necessary to ``solve a
problem'': a manuscript might ``verify a theorem'' or ``demonstrate a
theory'').  Please do not supply a long list of command arguments that
reproduce the \code{Rd} documentation: a vignette should be a
structured document.

Figures can enhance a submission very much (figure~\ref{square_int},
for example).  It is possible to use \verb+\includegraphics+ but it is
better to generate  PDFs on the fly:


\begin{figure}[htbp]
  \begin{center}
<<square_plot,fig=TRUE>>=
plot((1:10)^2)  # R provides basic arithmetic functions
@
\caption{The squares of\label{square_int} integers 1-10}
  \end{center}
\end{figure}

\section{Conclusions}

It is always good to have a conclusions section (note the plural) in
which an overall summary of the software may be given.

\bibliography{template}

\end{document}


